// Code generated by MockGen. DO NOT EDIT.
// Source: ./bigquery.go

// Package mock_bigquery is a generated GoMock package.
package mock_bigquery

import (
	reflect "reflect"

	model "github.com/cpurta/harmony-one-to-bigquery/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockBigQueryClient is a mock of BigQueryClient interface.
type MockBigQueryClient struct {
	ctrl     *gomock.Controller
	recorder *MockBigQueryClientMockRecorder
}

// MockBigQueryClientMockRecorder is the mock recorder for MockBigQueryClient.
type MockBigQueryClientMockRecorder struct {
	mock *MockBigQueryClient
}

// NewMockBigQueryClient creates a new mock instance.
func NewMockBigQueryClient(ctrl *gomock.Controller) *MockBigQueryClient {
	mock := &MockBigQueryClient{ctrl: ctrl}
	mock.recorder = &MockBigQueryClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBigQueryClient) EXPECT() *MockBigQueryClientMockRecorder {
	return m.recorder
}

// GetMostRecentBlockNumber mocks base method.
func (m *MockBigQueryClient) GetMostRecentBlockNumber() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostRecentBlockNumber")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMostRecentBlockNumber indicates an expected call of GetMostRecentBlockNumber.
func (mr *MockBigQueryClientMockRecorder) GetMostRecentBlockNumber() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostRecentBlockNumber", reflect.TypeOf((*MockBigQueryClient)(nil).GetMostRecentBlockNumber))
}

// InsertBlock mocks base method.
func (m *MockBigQueryClient) InsertBlock(block *model.Block) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertBlock", block)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertBlock indicates an expected call of InsertBlock.
func (mr *MockBigQueryClientMockRecorder) InsertBlock(block interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertBlock", reflect.TypeOf((*MockBigQueryClient)(nil).InsertBlock), block)
}

// InsertTransactions mocks base method.
func (m *MockBigQueryClient) InsertTransactions(transactions []*model.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertTransactions", transactions)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertTransactions indicates an expected call of InsertTransactions.
func (mr *MockBigQueryClientMockRecorder) InsertTransactions(transactions interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertTransactions", reflect.TypeOf((*MockBigQueryClient)(nil).InsertTransactions), transactions)
}
